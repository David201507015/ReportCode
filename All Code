library(ggplot2)
library(dplyr)
library(tidyr)
library(lubridate)
library(ggpubr)
library(ggthemes)
library(covid19mobility)

#load google data
mob<- read.csv("data/Global_Mobility_Report.csv")
head(mob)


ourworld  <- read.csv("data/owid-covid-data.csv")




# extract data for the us
us <- mob %>% filter(country_region_code == "US"& date<"2020-07-01")

# get general us data
usall <- mob %>% filter(country_region_code == "US"& date<"2020-07-01") %>% 
  filter(sub_region_1=="")%>% mutate(date= ymd(date))
# plot each of the 6 for uk 


US1 <-ggplot(usall,
             aes(x = date, y = grocery_and_pharmacy_percent_change_from_baseline)) +
  geom_line(color = "red")+
  geom_point(color = "red")+
  geom_hline(yintercept = 0, alpha=0.25)+
  theme_bw() +
  stat_smooth(method = "gam",
              fill = NA,
              color = "black")+
  xlab("") + ylab("Relative % Change")+
  ggtitle("Grocery and Pharmacy")


US2<-ggplot(usall,
            aes(x = date, y = parks_percent_change_from_baseline)) +
  geom_line(color = "red")+
  geom_point(color = "red")+
  geom_hline(yintercept = 0, alpha=0.25)+
  theme_bw() +
  stat_smooth(method = "gam",
              fill = NA,
              color = "black")+
  xlab("") + ylab("Relative % Change")+
  ggtitle("Parks")

US3<-ggplot(usall,
            aes(x = date, y = transit_stations_percent_change_from_baseline)) +
  geom_line(color = "red")+
  geom_point(color = "red")+
  geom_hline(yintercept = 0, alpha=0.25)+
  theme_bw() +
  stat_smooth(method = "gam",
              fill = NA,
              color = "black")+
  xlab("") + ylab("Relative % Change")+
  ggtitle("Transit Stations")


US4<-ggplot(usall,
            aes(x = date, y = workplaces_percent_change_from_baseline)) +
  geom_line(color = "red")+
  geom_point(color = "red")+
  geom_hline(yintercept = 0, alpha=0.25)+
  theme_bw() +
  stat_smooth(method = "gam",
              fill = NA,
              color = "black")+
  xlab("") + ylab("Relative % Change")+
  ggtitle("Workplaces")

US5<-ggplot(usall,
            aes(x = date, y = residential_percent_change_from_baseline)) +
  geom_line(color = "red")+
  geom_point(color = "red")+
  geom_hline(yintercept = 0, alpha=0.25)+
  theme_bw() +
  stat_smooth(method = "gam",
              fill = NA,
              color = "black")+
  xlab("") + ylab("Relative % Change")+
  ggtitle("Residential")

US6 <-ggplot(usall,
             aes(x = date, y = retail_and_recreation_percent_change_from_baseline)) +
  geom_line(color = "red")+
  geom_point(color = "red")+
  geom_hline(yintercept = 0, alpha=0.25)+
  theme_bw() +
  stat_smooth(method = "gam",
              fill = NA,
              color = "black")+
  xlab("") + ylab("Relative % Change")+
  ggtitle("Retail")



USMain<-ggarrange(US6, US1, US2, US3, US4, US5)
annotate_figure(USMain,top=text_grob("United States Mobility Plots", color="red", face="bold", size=14))

#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


# extract data for italy
it <- mob %>% filter(country_region_code == "IT"& date<"2020-07-01")

# get general us data
itall <- mob %>% filter(country_region_code == "IT"& date<"2020-07-01") %>% 
  filter(sub_region_1=="")%>% mutate(date= ymd(date))
# plot each of the 6 for uk 


IT1 <-ggplot(itall,
             aes(x = date, y = grocery_and_pharmacy_percent_change_from_baseline)) +
  geom_line(color = "red")+
  geom_point(color = "red")+
  geom_hline(yintercept = 0, alpha=0.25)+
  theme_bw() +
  stat_smooth(method = "gam",
              fill = NA,
              color = "black")+
  xlab("") + ylab("Relative % Change")+
  ggtitle("Grocery and Pharmacy")


IT2<-ggplot(itall,
            aes(x = date, y = parks_percent_change_from_baseline)) +
  geom_line(color = "red")+
  geom_point(color = "red")+
  geom_hline(yintercept = 0, alpha=0.25)+
  theme_bw() +
  stat_smooth(method = "gam",
              fill = NA,
              color = "black")+
  xlab("") + ylab("Relative % Change")+
  ggtitle("Parks")

IT3<-ggplot(itall,
            aes(x = date, y = transit_stations_percent_change_from_baseline)) +
  geom_line(color = "red")+
  geom_point(color = "red")+
  geom_hline(yintercept = 0, alpha=0.25)+
  theme_bw() +
  stat_smooth(method = "gam",
              fill = NA,
              color = "black")+
  xlab("") + ylab("Relative % Change")+
  ggtitle("Transit Stations")


IT4<-ggplot(itall,
            aes(x = date, y = workplaces_percent_change_from_baseline)) +
  geom_line(color = "red")+
  geom_point(color = "red")+
  geom_hline(yintercept = 0, alpha=0.25)+
  theme_bw() +
  stat_smooth(method = "gam",
              fill = NA,
              color = "black")+
  xlab("") + ylab("Relative % Change")+
  ggtitle("Workplaces")

IT5<-ggplot(itall,
            aes(x = date, y = residential_percent_change_from_baseline)) +
  geom_line(color = "red")+
  geom_point(color = "red")+
  geom_hline(yintercept = 0, alpha=0.25)+
  theme_bw() +
  stat_smooth(method = "gam",
              fill = NA,
              color = "black")+
  xlab("") + ylab("Relative % Change")+
  ggtitle("Residential")

IT6 <-ggplot(itall,
             aes(x = date, y = retail_and_recreation_percent_change_from_baseline)) +
  geom_line(color = "red")+
  geom_point(color = "red")+
  geom_hline(yintercept = 0, alpha=0.25)+
  theme_bw() +
  stat_smooth(method = "gam",
              fill = NA,
              color = "black")+
  xlab("") + ylab("Relative % Change")+
  ggtitle("Retail")



ITMain<-ggarrange(IT6, IT1, IT2, IT3, IT4, IT5)
annotate_figure(ITMain,top=text_grob("Italy Mobility Plots", color="red", face="bold", size=14))



#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

# extract data for thefrance
fr <- mob %>% filter(country_region_code == "FR"& date<"2020-07-01")

# get general us data
frall <- mob %>% filter(country_region_code == "FR"& date<"2020-07-01") %>% 
  filter(sub_region_1=="")%>% mutate(date= ymd(date))
# plot each of the 6 for uk 


FR1 <-ggplot(frall,
             aes(x = date, y = grocery_and_pharmacy_percent_change_from_baseline)) +
  geom_line(color = "red")+
  geom_point(color = "red")+
  geom_hline(yintercept = 0, alpha=0.25)+
  theme_bw() +
  stat_smooth(method = "gam",
              fill = NA,
              color = "black")+
  xlab("") + ylab("Relative % Change")+
  ggtitle("Grocery and Pharmacy")


FR2<-ggplot(frall,
            aes(x = date, y = parks_percent_change_from_baseline)) +
  geom_line(color = "red")+
  geom_point(color = "red")+
  geom_hline(yintercept = 0, alpha=0.25)+
  theme_bw() +
  stat_smooth(method = "gam",
              fill = NA,
              color = "black")+
  xlab("") + ylab("Relative % Change")+
  ggtitle("Parks")

FR3<-ggplot(frall,
            aes(x = date, y = transit_stations_percent_change_from_baseline)) +
  geom_line(color = "red")+
  geom_point(color = "red")+
  geom_hline(yintercept = 0, alpha=0.25)+
  theme_bw() +
  stat_smooth(method = "gam",
              fill = NA,
              color = "black")+
  xlab("") + ylab("Relative % Change")+
  ggtitle("Transit Stations")


FR4<-ggplot(frall,
            aes(x = date, y = workplaces_percent_change_from_baseline)) +
  geom_line(color = "red")+
  geom_point(color = "red")+
  geom_hline(yintercept = 0, alpha=0.25)+
  theme_bw() +
  stat_smooth(method = "gam",
              fill = NA,
              color = "black")+
  xlab("") + ylab("Relative % Change")+
  ggtitle("Workplaces")

FR5<-ggplot(frall,
            aes(x = date, y = residential_percent_change_from_baseline)) +
  geom_line(color = "red")+
  geom_point(color = "red")+
  geom_hline(yintercept = 0, alpha=0.25)+
  theme_bw() +
  stat_smooth(method = "gam",
              fill = NA,
              color = "black")+
  xlab("") + ylab("Relative % Change")+
  ggtitle("Residential")

FR6 <-ggplot(frall,
             aes(x = date, y = retail_and_recreation_percent_change_from_baseline)) +
  geom_line(color = "red")+
  geom_point(color = "red")+
  geom_hline(yintercept = 0, alpha=0.25)+
  theme_bw() +
  stat_smooth(method = "gam",
              fill = NA,
              color = "black")+
  xlab("") + ylab("Relative % Change")+
  ggtitle("Retail")



FRMain<-ggarrange(US6, US1, US2, US3, US4, US5)
annotate_figure(FRMain,top=text_grob("France Mobility Plots", color="red", face="bold", size=14))

#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


# extract data for the zimbabwe
zm <- mob %>% filter(country_region_code == "ZM"& date<"2020-07-01")

# get general us data
zmall <- mob %>% filter(country_region_code == "ZM"& date<"2020-07-01") %>% 
  filter(sub_region_1=="")%>% mutate(date= ymd(date))
# plot each of the 6 for uk 


zm1 <-ggplot(zmall,
             aes(x = date, y = grocery_and_pharmacy_percent_change_from_baseline)) +
  geom_line(color = "red")+
  geom_point(color = "red")+
  geom_hline(yintercept = 0, alpha=0.25)+
  theme_bw() +
  stat_smooth(method = "gam",
              fill = NA,
              color = "black")+
  xlab("") + ylab("Relative % Change")+
  ggtitle("Grocery and Pharmacy")


zm2<-ggplot(zmall,
            aes(x = date, y = parks_percent_change_from_baseline)) +
  geom_line(color = "red")+
  geom_point(color = "red")+
  geom_hline(yintercept = 0, alpha=0.25)+
  theme_bw() +
  stat_smooth(method = "gam",
              fill = NA,
              color = "black")+
  xlab("") + ylab("Relative % Change")+
  ggtitle("Parks")

zm3<-ggplot(zmall,
            aes(x = date, y = transit_stations_percent_change_from_baseline)) +
  geom_line(color = "red")+
  geom_point(color = "red")+
  geom_hline(yintercept = 0, alpha=0.25)+
  theme_bw() +
  stat_smooth(method = "gam",
              fill = NA,
              color = "black")+
  xlab("") + ylab("Relative % Change")+
  ggtitle("Transit Stations")


zm4<-ggplot(zmall,
            aes(x = date, y = workplaces_percent_change_from_baseline)) +
  geom_line(color = "red")+
  geom_point(color = "red")+
  geom_hline(yintercept = 0, alpha=0.25)+
  theme_bw() +
  stat_smooth(method = "gam",
              fill = NA,
              color = "black")+
  xlab("") + ylab("Relative % Change")+
  ggtitle("Workplaces")

zm5<-ggplot(zmall,
            aes(x = date, y = residential_percent_change_from_baseline)) +
  geom_line(color = "red")+
  geom_point(color = "red")+
  geom_hline(yintercept = 0, alpha=0.25)+
  theme_bw() +
  stat_smooth(method = "gam",
              fill = NA,
              color = "black")+
  xlab("") + ylab("Relative % Change")+
  ggtitle("Residential")

zm6 <-ggplot(zmall,
             aes(x = date, y = retail_and_recreation_percent_change_from_baseline)) +
  geom_line(color = "red")+
  geom_point(color = "red")+
  geom_hline(yintercept = 0, alpha=0.25)+
  theme_bw() +
  stat_smooth(method = "gam",
              fill = NA,
              color = "black")+
  xlab("") + ylab("Relative % Change")+
  ggtitle("Retail")



zmMain<-ggarrange(zm6, zm1, zm2, zm3, zm4, zm5)
annotate_figure(zmMain,top=text_grob("Zimbabwe Mobility Plots", color="red", face="bold", size=14))


#%%%%%%%%%%%%%%%%%%%%%%%%%% 
#Uganda

# extract data for the us
ug <- mob %>% filter(country_region_code == "UG"& date<"2020-07-01")

# get general us data
ugall <- mob %>% filter(country_region_code == "UG"& date<"2020-07-01") %>% 
  filter(sub_region_1=="")%>% mutate(date= ymd(date))
# plot each of the 6 for uk 


ug1 <-ggplot(ugall,
             aes(x = date, y = grocery_and_pharmacy_percent_change_from_baseline)) +
  geom_line(color = "red")+
  geom_point(color = "red")+
  geom_hline(yintercept = 0, alpha=0.25)+
  theme_bw() +
  stat_smooth(method = "gam",
              fill = NA,
              color = "black")+
  xlab("") + ylab("Relative % Change")+
  ggtitle("Grocery and Pharmacy")


ug2<-ggplot(ugall,
            aes(x = date, y = parks_percent_change_from_baseline)) +
  geom_line(color = "red")+
  geom_point(color = "red")+
  geom_hline(yintercept = 0, alpha=0.25)+
  theme_bw() +
  stat_smooth(method = "gam",
              fill = NA,
              color = "black")+
  xlab("") + ylab("Relative % Change")+
  ggtitle("Parks")

ug3<-ggplot(ugall,
            aes(x = date, y = transit_stations_percent_change_from_baseline)) +
  geom_line(color = "red")+
  geom_point(color = "red")+
  geom_hline(yintercept = 0, alpha=0.25)+
  theme_bw() +
  stat_smooth(method = "gam",
              fill = NA,
              color = "black")+
  xlab("") + ylab("Relative % Change")+
  ggtitle("Transit Stations")


ug4<-ggplot(ugall,
            aes(x = date, y = workplaces_percent_change_from_baseline)) +
  geom_line(color = "red")+
  geom_point(color = "red")+
  geom_hline(yintercept = 0, alpha=0.25)+
  theme_bw() +
  stat_smooth(method = "gam",
              fill = NA,
              color = "black")+
  xlab("") + ylab("Relative % Change")+
  ggtitle("Workplaces")

ug5<-ggplot(ugall,
            aes(x = date, y = residential_percent_change_from_baseline)) +
  geom_line(color = "red")+
  geom_point(color = "red")+
  geom_hline(yintercept = 0, alpha=0.25)+
  theme_bw() +
  stat_smooth(method = "gam",
              fill = NA,
              color = "black")+
  xlab("") + ylab("Relative % Change")+
  ggtitle("Residential")

ug6 <-ggplot(ugall,
             aes(x = date, y = retail_and_recreation_percent_change_from_baseline)) +
  geom_line(color = "red")+
  geom_point(color = "red")+
  geom_hline(yintercept = 0, alpha=0.25)+
  theme_bw() +
  stat_smooth(method = "gam",
              fill = NA,
              color = "black")+
  xlab("") + ylab("Relative % Change")+
  ggtitle("Retail")



ugMain<-ggarrange(ug6, ug1, ug2, ug3, ug4, ug5)
annotate_figure(ugMain,top=text_grob("Uganda Mobility Plots", color="red", face="bold", size=14))

#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

# extract data for the us
th <- mob %>% filter(country_region_code == "TH"& date<"2020-07-01")

# get general us data
thall <- mob %>% filter(country_region_code == "TH"& date<"2020-07-01") %>% 
  filter(sub_region_1=="")%>% mutate(date= ymd(date))
# plot each of the 6 for uk 


th1 <-ggplot(thall,
             aes(x = date, y = grocery_and_pharmacy_percent_change_from_baseline)) +
  geom_line(color = "red")+
  geom_point(color = "red")+
  geom_hline(yintercept = 0, alpha=0.25)+
  theme_bw() +
  stat_smooth(method = "gam",
              fill = NA,
              color = "black")+
  xlab("") + ylab("Relative % Change")+
  ggtitle("Grocery and Pharmacy")


th2<-ggplot(thall,
            aes(x = date, y = parks_percent_change_from_baseline)) +
  geom_line(color = "red")+
  geom_point(color = "red")+
  geom_hline(yintercept = 0, alpha=0.25)+
  theme_bw() +
  stat_smooth(method = "gam",
              fill = NA,
              color = "black")+
  xlab("") + ylab("Relative % Change")+
  ggtitle("Parks")

th3<-ggplot(thall,
            aes(x = date, y = transit_stations_percent_change_from_baseline)) +
  geom_line(color = "red")+
  geom_point(color = "red")+
  geom_hline(yintercept = 0, alpha=0.25)+
  theme_bw() +
  stat_smooth(method = "gam",
              fill = NA,
              color = "black")+
  xlab("") + ylab("Relative % Change")+
  ggtitle("Transit Stations")


th4<-ggplot(thall,
            aes(x = date, y = workplaces_percent_change_from_baseline)) +
  geom_line(color = "red")+
  geom_point(color = "red")+
  geom_hline(yintercept = 0, alpha=0.25)+
  theme_bw() +
  stat_smooth(method = "gam",
              fill = NA,
              color = "black")+
  xlab("") + ylab("Relative % Change")+
  ggtitle("Workplaces")

th5<-ggplot(thall,
            aes(x = date, y = residential_percent_change_from_baseline)) +
  geom_line(color = "red")+
  geom_point(color = "red")+
  geom_hline(yintercept = 0, alpha=0.25)+
  theme_bw() +
  stat_smooth(method = "gam",
              fill = NA,
              color = "black")+
  xlab("") + ylab("Relative % Change")+
  ggtitle("Residential")

th6 <-ggplot(thall,
             aes(x = date, y = retail_and_recreation_percent_change_from_baseline)) +
  geom_line(color = "red")+
  geom_point(color = "red")+
  geom_hline(yintercept = 0, alpha=0.25)+
  theme_bw() +
  stat_smooth(method = "gam",
              fill = NA,
              color = "black")+
  xlab("") + ylab("Relative % Change")+
  ggtitle("Retail")



thMain<-ggarrange(th6, th1, th2, th3, th4, th5)
annotate_figure(thMain,top=text_grob("Thailand Mobility Plots", color="red", face="bold", size=14))


#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

# extract data for the us
fj <- mob %>% filter(country_region_code == "FJ"& date<"2020-07-01")

# get general us data
fjall <- mob %>% filter(country_region_code == "FJ"& date<"2020-07-01") %>% 
  filter(sub_region_1=="")%>% mutate(date= ymd(date))
# plot each of the 6 for uk 


fj1 <-ggplot(fjall,
             aes(x = date, y = grocery_and_pharmacy_percent_change_from_baseline)) +
  geom_line(color = "red")+
  geom_point(color = "red")+
  geom_hline(yintercept = 0, alpha=0.25)+
  theme_bw() +
  stat_smooth(method = "gam",
              fill = NA,
              color = "black")+
  xlab("") + ylab("Relative % Change")+
  ggtitle("Grocery and Pharmacy")


fj2<-ggplot(fjall,
            aes(x = date, y = parks_percent_change_from_baseline)) +
  geom_line(color = "red")+
  geom_point(color = "red")+
  geom_hline(yintercept = 0, alpha=0.25)+
  theme_bw() +
  stat_smooth(method = "gam",
              fill = NA,
              color = "black")+
  xlab("") + ylab("Relative % Change")+
  ggtitle("Parks")

fj3<-ggplot(fjall,
            aes(x = date, y = transit_stations_percent_change_from_baseline)) +
  geom_line(color = "red")+
  geom_point(color = "red")+
  geom_hline(yintercept = 0, alpha=0.25)+
  theme_bw() +
  stat_smooth(method = "gam",
              fill = NA,
              color = "black")+
  xlab("") + ylab("Relative % Change")+
  ggtitle("Transit Stations")


fj4<-ggplot(fjall,
            aes(x = date, y = workplaces_percent_change_from_baseline)) +
  geom_line(color = "red")+
  geom_point(color = "red")+
  geom_hline(yintercept = 0, alpha=0.25)+
  theme_bw() +
  stat_smooth(method = "gam",
              fill = NA,
              color = "black")+
  xlab("") + ylab("Relative % Change")+
  ggtitle("Workplaces")

fj5<-ggplot(fjall,
            aes(x = date, y = residential_percent_change_from_baseline)) +
  geom_line(color = "red")+
  geom_point(color = "red")+
  geom_hline(yintercept = 0, alpha=0.25)+
  theme_bw() +
  stat_smooth(method = "gam",
              fill = NA,
              color = "black")+
  xlab("") + ylab("Relative % Change")+
  ggtitle("Residential")

fj6 <-ggplot(fjall,
             aes(x = date, y = retail_and_recreation_percent_change_from_baseline)) +
  geom_line(color = "red")+
  geom_point(color = "red")+
  geom_hline(yintercept = 0, alpha=0.25)+
  theme_bw() +
  stat_smooth(method = "gam",
              fill = NA,
              color = "black")+
  xlab("") + ylab("Relative % Change")+
  ggtitle("Retail")



fjMain<-ggarrange(fj6, fj1, fj2, fj3, fj4, fj5)
annotate_figure(fjMain,top=text_grob("Fiji Mobility Plots", color="red", face="bold", size=14))

#%%%%%%%%%%%%%%%%%%%%%%braazil

br <- mob %>% filter(country_region_code == "BR"& date<"2020-07-01")

# get general us data
brall <- mob %>% filter(country_region_code == "BR"& date<"2020-07-01") %>% 
  filter(sub_region_1=="")%>% mutate(date= ymd(date))
# plot each of the 6 for uk 


br1 <-ggplot(brall,
             aes(x = date, y = grocery_and_pharmacy_percent_change_from_baseline)) +
  geom_line(color = "red")+
  geom_point(color = "red")+
  geom_hline(yintercept = 0, alpha=0.25)+
  theme_bw() +
  stat_smooth(method = "gam",
              fill = NA,
              color = "black")+
  xlab("") + ylab("Relative % Change")+
  ggtitle("Grocery and Pharmacy")


br2<-ggplot(brall,
            aes(x = date, y = parks_percent_change_from_baseline)) +
  geom_line(color = "red")+
  geom_point(color = "red")+
  geom_hline(yintercept = 0, alpha=0.25)+
  theme_bw() +
  stat_smooth(method = "gam",
              fill = NA,
              color = "black")+
  xlab("") + ylab("Relative % Change")+
  ggtitle("Parks")

br3<-ggplot(brall,
            aes(x = date, y = transit_stations_percent_change_from_baseline)) +
  geom_line(color = "red")+
  geom_point(color = "red")+
  geom_hline(yintercept = 0, alpha=0.25)+
  theme_bw() +
  stat_smooth(method = "gam",
              fill = NA,
              color = "black")+
  xlab("") + ylab("Relative % Change")+
  ggtitle("Transit Stations")


br4<-ggplot(brall,
            aes(x = date, y = workplaces_percent_change_from_baseline)) +
  geom_line(color = "red")+
  geom_point(color = "red")+
  geom_hline(yintercept = 0, alpha=0.25)+
  theme_bw() +
  stat_smooth(method = "gam",
              fill = NA,
              color = "black")+
  xlab("") + ylab("Relative % Change")+
  ggtitle("Workplaces")

br5<-ggplot(brall,
            aes(x = date, y = residential_percent_change_from_baseline)) +
  geom_line(color = "red")+
  geom_point(color = "red")+
  geom_hline(yintercept = 0, alpha=0.25)+
  theme_bw() +
  stat_smooth(method = "gam",
              fill = NA,
              color = "black")+
  xlab("") + ylab("Relative % Change")+
  ggtitle("Residential")

br6 <-ggplot(brall,
             aes(x = date, y = retail_and_recreation_percent_change_from_baseline)) +
  geom_line(color = "red")+
  geom_point(color = "red")+
  geom_hline(yintercept = 0, alpha=0.25)+
  theme_bw() +
  stat_smooth(method = "gam",
              fill = NA,
              color = "black")+
  xlab("") + ylab("Relative % Change")+
  ggtitle("Retail")



brMain<-ggarrange(br6, br1, br2, br3, br4, br5)
annotate_figure(brMain,top=text_grob("Brazil Mobility Plots", color="red", face="bold", size=14))



#INDIA



ind <- mob %>% filter(country_region_code == "IN"& date<"2020-07-01")

# get general us data
inall <- mob %>% filter(country_region_code == "IN"& date<"2020-07-01") %>% 
  filter(sub_region_1=="")%>% mutate(date= ymd(date))
# plot each of the 6 for uk 


in1 <-ggplot(inall,
             aes(x = date, y = grocery_and_pharmacy_percent_change_from_baseline)) +
  geom_line(color = "red")+
  geom_point(color = "red")+
  geom_hline(yintercept = 0, alpha=0.25)+
  theme_bw() +
  stat_smooth(method = "gam",
              fill = NA,
              color = "black")+
  xlab("") + ylab("Relative % Change")+
  ggtitle("Grocery and Pharmacy")


in2<-ggplot(inall,
            aes(x = date, y = parks_percent_change_from_baseline)) +
  geom_line(color = "red")+
  geom_point(color = "red")+
  geom_hline(yintercept = 0, alpha=0.25)+
  theme_bw() +
  stat_smooth(method = "gam",
              fill = NA,
              color = "black")+
  xlab("") + ylab("Relative % Change")+
  ggtitle("Parks")

in3<-ggplot(inall,
            aes(x = date, y = transit_stations_percent_change_from_baseline)) +
  geom_line(color = "red")+
  geom_point(color = "red")+
  geom_hline(yintercept = 0, alpha=0.25)+
  theme_bw() +
  stat_smooth(method = "gam",
              fill = NA,
              color = "black")+
  xlab("") + ylab("Relative % Change")+
  ggtitle("Transit Stations")


in4<-ggplot(inall,
            aes(x = date, y = workplaces_percent_change_from_baseline)) +
  geom_line(color = "red")+
  geom_point(color = "red")+
  geom_hline(yintercept = 0, alpha=0.25)+
  theme_bw() +
  stat_smooth(method = "gam",
              fill = NA,
              color = "black")+
  xlab("") + ylab("Relative % Change")+
  ggtitle("Workplaces")

in5<-ggplot(inall,
            aes(x = date, y = residential_percent_change_from_baseline)) +
  geom_line(color = "red")+
  geom_point(color = "red")+
  geom_hline(yintercept = 0, alpha=0.25)+
  theme_bw() +
  stat_smooth(method = "gam",
              fill = NA,
              color = "black")+
  xlab("") + ylab("Relative % Change")+
  ggtitle("Residential")

in6 <-ggplot(inall,
             aes(x = date, y = retail_and_recreation_percent_change_from_baseline)) +
  geom_line(color = "red")+
  geom_point(color = "red")+
  geom_hline(yintercept = 0, alpha=0.25)+
  theme_bw() +
  stat_smooth(method = "gam",
              fill = NA,
              color = "black")+
  xlab("") + ylab("Relative % Change")+
  ggtitle("Retail")



inMain<-ggarrange(in6, in1, in2, in3, in4, in5)
annotate_figure(inMain,top=text_grob("India Mobility Plots", color="red", face="bold", size=14))

rm(list = ls())
library(tidyverse)
library(dplyr)
library(reshape2)
library(lubridate)
library(covid19.analytics)
library(plm)
library(magrittr)

mobility <- read.csv("data/Global_Mobility_Report.csv")

reproductiveNumber <- read.csv('data/owid-covid-data.csv')

lag <- 7

panelRegressionRNumber <- function(specificCountry){
  reproductiveNumberCountry <- reproductiveNumber %>% 
    mutate(date = ymd(date)) %>%
    filter(location == specificCountry, date <= "2020-07-01") %>%
    select(location, date, total_cases, new_cases, reproduction_rate) %>%
    arrange(date)
  
  mobilityCountry <- mobility %>% 
    select(country_region, date, retail_and_recreation_percent_change_from_baseline, 
           grocery_and_pharmacy_percent_change_from_baseline, 
           parks_percent_change_from_baseline, 
           transit_stations_percent_change_from_baseline,
           workplaces_percent_change_from_baseline,
           residential_percent_change_from_baseline) %>%
    mutate(date = ymd(date)) %>%
    group_by(country_region, date) %>% 
    replace(is.na(.), 0) %>%
    summarise(retail_and_recreation_percent_change_from_baseline = mean(retail_and_recreation_percent_change_from_baseline),
              grocery_and_pharmacy_percent_change_from_baseline = mean(grocery_and_pharmacy_percent_change_from_baseline),
              parks_percent_change_from_baseline = mean(parks_percent_change_from_baseline),
              transit_stations_percent_change_from_baseline = mean(transit_stations_percent_change_from_baseline),
              workplaces_percent_change_from_baseline = mean(workplaces_percent_change_from_baseline),
              residential_percent_change_from_baseline = mean(residential_percent_change_from_baseline)) %>%
    filter(country_region == specificCountry, date <= "2020-07-01") %>%
    arrange(date)
  
  mobilityCountry <- mobilityCountry %>% mutate(date = date - 7, 
                                      day = day(date), 
                                      month = month(date),
                                      year = year(date))
  
  combinedDataCountry <- inner_join(reproductiveNumberCountry, 
                                    mobilityCountry, 
                                    by = "date", 
                                    all = TRUE)
  
  casesMobilityModel2 <- plm(reproduction_rate ~ retail_and_recreation_percent_change_from_baseline + 
                               grocery_and_pharmacy_percent_change_from_baseline + 
                               parks_percent_change_from_baseline + transit_stations_percent_change_from_baseline +
                               workplaces_percent_change_from_baseline + residential_percent_change_from_baseline, 
                             data = combinedDataCountry, 
                             model = 'within', 
                             effect = 'twoways',
                             index =c("day", "month", "year"))
  summary(casesMobilityModel2)
}

panelRegressionRNumber("United Kingdom")

panelRegressionRNumber("Indonesia")

panelRegressionRNumber("India")


rm(list = ls())
library(covid19.analytics)
library(tidyverse)
library(lubridate)
library(ggplot2)
library(ggpubr)
library(reshape2)


#Read JHU data
covidJohnsHopkins<-covid19.data(case="ts-confirmed")

#Data manipulation
selectedCountries <- c('New Zealand', 'United Kingdom', 'Spain', 'Italy', 'Sweden')

Covid5C <- covidJohnsHopkins %>% 
  pivot_longer(col = -c("Province.State","Country.Region","Lat", "Long"),
               names_to = "date", values_to = "cumulative_cases") %>% 
  # turn the Date column into actual Date type
  mutate(date = ymd(date)) %>% 
  # just get selected countries
  filter(Province.State=="") %>% 
  # Calculate the number of new cases per day
  mutate(incident_cases = c(0, diff(cumulative_cases)))%>%
  mutate(cases_100000 = incident_cases/100000)%>%
  # only keep data before August, and remove row with no reported cases 
  filter(date<="2020-07-01", incident_cases > 0)

#Read apple data
appleMobility <- read.csv('data/AppleEdited.csv', 
                          header = TRUE, check.names = FALSE)
str(appleMobility)

#colnames(appleMobility)
appleMobilityEdited <- appleMobility %>% 
  pivot_longer(col = -c("geo_type","region","transportation_type", "alternative_name", "sub-region","country"),
               names_to = "date", values_to = "mobility")

appleMobilityEdited <- appleMobilityEdited %>%
  # turn the Date column into actual Date type
  mutate(date = dmy(date)) %>% 
  # only keep data before August, and remove row with no reported cases 
  filter(date<="2020-07-01") %>% 
    # drop column 1,3,4 and 5
  select(-c(1,4,5,6)) %>% 
  # renaming the region column
  rename(Country.Region=region) 

appleMobilityDriving <- appleMobilityEdited %>% 
  filter(transportation_type == "driving") %>%
  rename(driving = mobility) %>%
  select(-transportation_type)
appleMobilityWalking <- appleMobilityEdited %>% filter(transportation_type == "walking") %>% rename(walking = mobility) %>% select(-transportation_type)
appleMobilityTransit <- appleMobilityEdited %>% filter(transportation_type == "transit") %>% rename(transit = mobility) %>% select(-transportation_type)

appleMobilityFinal <- left_join(appleMobilityWalking, 
                                  appleMobilityDriving, by = c("Country.Region", "date"))

appleMobilityFinal2 <- left_join(appleMobilityFinal, appleMobilityTransit, by = c("Country.Region", "date"))

appleMobilityLagged <- appleMobilityFinal2 %>% mutate(date = date - 7)


#Joining Apple mobility and covid data

covidAndMobility<-left_join(Covid5C,
                            appleMobilityLagged, 
                            by=c("date", "Country.Region")) %>%
  mutate(walking = walking - 100, 
         transit = transit - 100, 
         driving = driving - 100)

covidAndMobilitySelectedCountry <- function(selectedCountry){
  covidAndMobilityOne<-covidAndMobility %>%  filter((Country.Region == selectedCountry))
  # Set color palette  
  cols = hcl(c(15, 15+180), 100, 65)
  scl = 1
  
  #Plot of cases and mobility
  finalPlot <- ggplot() + geom_line(data=covidAndMobilityOne, aes(x = date , y=mobnew/scl, colour="mobility"))+
    scale_y_continuous("Mobility")+
    ggtitle(paste("Trends in mobility for", selectedCountry)) +
    theme_bw()+ 
    theme(legend.position = "bottom",
          legend.margin=margin(-5,0,0,0),
          plot.title = element_text(hjust = 0.5),
          axis.text.y.right=element_text(colour=cols[2]),
          axis.ticks.y.right=element_line(colour=cols[2]),
          axis.title.y.right=element_text(colour=cols[2]),
          axis.text.y=element_text(colour=cols[1]),
          axis.ticks.y=element_line(colour=cols[1]),
          axis.title.y=element_text(colour=cols[1])) +
    scale_colour_manual(values=cols) +
    labs(colour="")+facet_wrap(~transportation_type)
  finalPlot  
}

covidAndMobilitySelectedCountry("Afghanistan")

### plotting reproductive number
rNumberData <- read.csv('/Users/bemsi/Downloads/owid-covid-data.csv')

rNumberData <- rNumberData %>% select(location, date, new_cases, reproduction_rate) %>%
  mutate(date = ymd(date)) %>%
  filter(date <= "2020-07-01" & date >= "2020-04-01")

plotRNumberData <- function(selectedCountry){
  rNumberCountry <- rNumberData %>% filter(location == selectedCountry)
  finalPlot <- ggplot(data = rNumberCountry, aes(x = date, y = reproduction_rate)) + 
    geom_line() +
    xlab('Date') +
    ylab('Reproduction rate') +
    ggtitle(paste('Reproduction rate against time for', selectedCountry)) +
    theme_bw() + theme_classic()
  finalPlot
}

plotRNumberData("France")

panelRegressionCases <- function(selectedCountry){
  covidAndMobilityOne<-covidAndMobility %>%  
    filter((Country.Region == selectedCountry)) %>%
    mutate(day = day(date), 
           month = month(date))
  
  casesMobilityModel2 <- plm(cases_100000 ~ walking + transit + driving, 
                             data = covidAndMobilityOne, 
                             model = 'within', 
                             effect = 'twoways',
                             index =c('day', 'month'),
                             na.action = na.exclude)
  summary(casesMobilityModel2)
}

panelRegressionCases2 <- function(selectedCountry){
  covidAndMobilityOne<-covidAndMobility %>%  
    filter((Country.Region == selectedCountry)) %>%
    mutate(day = day(date), 
           month = month(date))
  
  casesMobilityModel2 <- plm(cases_100000 ~ walking  + driving, 
                             data = covidAndMobilityOne, 
                             model = 'within', 
                             effect = 'twoways',
                             index =c('day', 'month'),
                             na.action = na.exclude)
  summary(casesMobilityModel2)
}

panelRegressionCases("United Kingdom")
panelRegressionCases("France")


panelRegressionCases2("India")
panelRegressionCases2("Thailand")

 #Composite plots for the apple data 
rm(list = ls())
library(covid19.analytics)
library(tidyverse)
library(lubridate)
library(ggplot2)
library(ggpubr)
library(reshape2)
library(plm)

#Read JHU data
covidJohnsHopkins<-covid19.data(case="ts-confirmed")

#Data manipulation
selectedCountries <- c('New Zealand', 'United Kingdom', 'Spain', 'Italy', 'Sweden','United States')

Covid5C <- covidJohnsHopkins %>% 
  pivot_longer(col = -c("Province.State","Country.Region","Lat", "Long"),
               names_to = "date", values_to = "cumulative_cases") %>% 
  # turn the Date column into actual Date type
  mutate(date = ymd(date)) %>% 
  # just get selected countries
  filter(Province.State=="") %>% 
  # Calculate the number of new cases per day
  mutate(incident_cases = c(0, diff(cumulative_cases)))%>%
  mutate(cases_100000 = incident_cases/100000)%>%
  # only keep data before August, and remove row with no reported cases 
  filter(date<="2020-07-01", incident_cases > 0)

#Read apple data
appleMobility <- read.csv('appleMobilitytrends-2021-03-21-edited.csv', 
                          header = TRUE, check.names = FALSE)
str(appleMobility)

#colnames(appleMobility)
appleMobilityEdited <- appleMobility %>% 
  pivot_longer(col = -c("geo_type","region","transportation_type", "alternative_name", "sub-region","country"),
               names_to = "date", values_to = "mobility")

appleMobilityEdited <- appleMobilityEdited %>%
  # turn the Date column into actual Date type
  mutate(date = dmy(date)) %>% 
  # just get selected countries
  
  # only keep data before August, and remove row with no reported cases 
  filter(date<="2020-07-01") %>% 
    # drop column 1,3,4 and 5
  select(-c(1,4,5,6)) %>% 
  # renaming the region column
  rename(Country.Region=region)

#Joining Apple mobility and covid data

covidAndMobility<-left_join(Covid5C,appleMobilityEdited, by=c("date", "Country.Region")) %>% group_by(transportation_type)%>%
  mutate(mobnew=(mobility-100))

covidAndMobilitySelectedCountry <- function(selectedCountry){
  covidAndMobilityOne<-covidAndMobility %>%  filter((Country.Region == selectedCountry))
  # Set color palette  
  cols = hcl(c(15, 15+180), 100, 65)
  scl = 1
  
  #Plot of cases and mobility
  finalPlot <- ggplot() + geom_line(data=covidAndMobilityOne, aes(x = date , y=mobnew/scl, colour="mobility"))+
    scale_y_continuous("Mobility")+
    ggtitle(paste(selectedCountry)) +
    theme_bw()+ 
    theme(legend.position = "bottom",
          legend.margin=margin(-5,0,0,0),
          plot.title = element_text(hjust = 0.5),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),
          axis.text.y.right=element_text(colour=cols[2]),
          axis.ticks.y.right=element_line(colour=cols[2]),
          axis.title.y.right=element_text(colour=cols[2]),
          axis.text.y=element_text(colour=cols[1]),
          axis.ticks.y=element_line(colour=cols[1]),
          axis.title.y=element_text(colour=cols[1])) +
    scale_colour_manual(values=cols)  +
    labs(colour="")+facet_wrap(~transportation_type) + 
    theme(legend.position = "none") +
    scale_x_continuous(n.breaks = 3)
  finalPlot  
}

covidAndMobilitySelectedCountry("United Kingdom")


A1<-covidAndMobilitySelectedCountry("United Kingdom")
B1<-covidAndMobilitySelectedCountry("United States")
C1<-covidAndMobilitySelectedCountry("France")
D1<-covidAndMobilitySelectedCountry("Italy")
E1<-covidAndMobilitySelectedCountry("Thailand")
F1<-covidAndMobilitySelectedCountry("India")
G1<-covidAndMobilitySelectedCountry("Brazil")
H1<-covidAndMobilitySelectedCountry("Turkey")
I1<-covidAndMobilitySelectedCountry("Indonesia")

applegg<-ggarrange(A1,C1,D1,E1,F1,G1,H1,I1)
annotate_figure(applegg,top=text_grob("Apple Mobility Data", color="red", face="bold", size=14))

### plotting reproductive number
rNumberData <- read.csv('data/owid-covid-data.csv')

rNumberData <- rNumberData %>% select(location, date, new_cases, reproduction_rate) %>%
  mutate(date = ymd(date)) %>%
  filter(date <= "2020-07-01" & date >= "2020-04-01")

plotRNumberData <- function(selectedCountry){
  rNumberCountry <- rNumberData %>% filter(location == selectedCountry)
  finalPlot <- ggplot(data = rNumberCountry, aes(x = date, y = reproduction_rate)) + 
    geom_line() +
    xlab('Date') +
    ylab('Reproduction rate') +
    ggtitle(paste('Reproduction rate against time for', selectedCountry)) +
    theme_bw() + theme_classic()
  finalPlot
}

plotRNumberData("France")

panelRegressionCases <- function(selectedCountry, typeOfTransportatioin){
  covidAndMobilityOne<-covidAndMobility %>%  
    filter((Country.Region == selectedCountry & transportation_type == typeOfTransportatioin)) %>%
    mutate(day = day(date), 
           month = month(date))
  
  casesMobilityModel2 <- plm(cases_100000 ~ mobnew, 
                             data = covidAndMobilityOne, 
                             model = 'within', 
                             effect = 'twoways',
                             index =c('day', 'month'))
  summary(casesMobilityModel2)
}

panelRegressionCases("United Kingdom", "transit")

# Modelling Correlation of Mobility
# with rates of Coronavirus
rm(list = ls())
library(tidyverse)
library(dplyr)
library(reshape2)
library(lubridate)
library(covid19.analytics)
library(plm)

# load the data ...
# covid data from John Hopkins 
covid <- covid19.data(case = "ts-confirmed")
# Mobility data from Google
mobility <- read.csv("data/Global_Mobility_Report.csv")

# Data containing number of cases
worldData <- read.csv('data/worlddatan.csv')

owid <- read.csv('data/owid-covid-data.csv') 

owidData <- owid %>%
  rename(countryRegion = location) %>%
  select(countryRegion, date, new_cases, gdp_per_capita)
# Subset mobility data - keeping only countries with no sub-regions, and dates 
# before 1st July

mobility <- mobility %>% 
  # sub region "" why?
  filter(sub_region_1 == "") %>% 
  mutate(date = ymd(date)) %>% 
  # dates before end of first wave
  filter(date <= "2020-07-01") %>% 
  # select columns
  select(-country_region_code, -sub_region_1, -sub_region_2, -metro_area, -iso_3166_2_code,
         -census_fips_code)

  
#### Total number of cases over the first wave (March - June 2020)
totalCases <- worldData %>% 
              filter(month >=3 & month <=6) %>%
              group_by(countriesAndTerritories) %>%
              summarise(totals = sum(cases))

##Ideas: make a scatterplot, make a bar chart to show distribution of this
### say which countries had the most cases, which ones had the least cases - why?


#### Duration of the exponential phase
# To do this, we will make a chart to see disease progress over time for some (six?) countries
casesUK <- worldData %>% mutate(dateRep = dmy(dateRep)) %>% 
            filter(countriesAndTerritories == "United_Kingdom" & month <= 10) %>%
            arrange(month, day)

casesUS <- worldData %>%
  filter(countriesAndTerritories == "United_States_of_America") %>%
  filter(month <=7) %>%
  arrange(month, day)

casesFrance <- worldData %>%
  filter(countriesAndTerritories == "France") %>%
  filter(month <=7) %>%
  arrange(month, day)


ggplot(data = casesUK, aes(x = dateRep, y = cases)) + geom_line(color = 'red') +
  theme_bw() + theme_classic() +
  labs(y = "Number of cases", x = "Month")



#### Maximum reduction in mobility in different categories
maxReductionInMobility <- mobility %>%
                          group_by(country_region) %>%
                          replace(is.na(.), 0)  %>%
                          summarise(maxRetail = min(retail_and_recreation_percent_change_from_baseline),
                                    maxGrocery = min(grocery_and_pharmacy_percent_change_from_baseline),
                                    maxParks = max(parks_percent_change_from_baseline),
                                    maxTransit = min(transit_stations_percent_change_from_baseline),
                                    maxWorkplace = min(workplaces_percent_change_from_baseline),
                                    maxResidential = max(residential_percent_change_from_baseline))


### Ideas:
# Plot for each kind of mobility, showing the reduction for different countries
ggplot(data = maxReductionInMobility, aes(x = country_region, y = abs(maxRetail))) + geom_point() +
  theme(axis.title.x=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank()) + 
  scale_y_continuous(trans = 'log10') +
  labs(y = "Maximum change in Retail Mobility") 
  
# Plot for each country, change in mobilities for different categories


#### Overall reduction in mobility throughout period
OverallChangeInMobility <- mobility %>% 
  mutate(date = ymd(date)) %>% 
  filter(date <= "2020-07-01") %>% 
  group_by(country_region, date) %>% 
  replace(is.na(.), 0) %>%
  summarise(retail_and_recreation_percent_change_from_baseline = mean(retail_and_recreation_percent_change_from_baseline),
            grocery_and_pharmacy_percent_change_from_baseline = mean(grocery_and_pharmacy_percent_change_from_baseline),
            parks_percent_change_from_baseline = mean(parks_percent_change_from_baseline),
            transit_stations_percent_change_from_baseline = mean(transit_stations_percent_change_from_baseline),
            workplaces_percent_change_from_baseline = mean(workplaces_percent_change_from_baseline),
            residential_percent_change_from_baseline = mean(residential_percent_change_from_baseline)) %>%
  group_by(country_region) %>%
  summarise(across(retail_and_recreation_percent_change_from_baseline:residential_percent_change_from_baseline, sum))
### Ideas:
# Plot for each kind of mobility, showing the reduction for different countries
# Plot for each country, change in mobilities for different categories


###### ------------ Potential correlations between measures ---------------------
casesPerPerson <- worldData %>%
  group_by(countriesAndTerritories) %>%
  filter(month <= 6) %>%
  summarise(cc = sum(cases), pop = mean(popData2019), date = dateRep) %>%
  mutate(casesPerPerson = cc/pop * 100000)



casesPerPerson <- casesPerPerson %>% 
                  rename(countryRegion = countriesAndTerritories) %>%
                  mutate(countryRegion = replace(countryRegion, which(countryRegion=="United_Kingdom"), "United Kingdom")) %>%
                  mutate(countryRegion = replace(countryRegion, which(countryRegion=="United_States_of_America"), "United States"))
    
changeInMobility <- OverallChangeInMobility %>% rename(countryRegion = country_region)
combinedData <- inner_join(casesPerPerson, changeInMobility, by="countryRegion", all = TRUE)
combinedData <- inner_join(combinedData, owidData, by = "countryRegion", all = TRUE)
combinedData <- combinedData %>%
  group_by(countryRegion) %>% 
  summarise(across(cc:gdp_per_capita, mean)) %>% 
  select(-date.x, -date.y) %>%
  mutate(wealthLevel = ifelse(gdp_per_capita <= 10000, "Poor", 
                              ifelse(gdp_per_capita >=31000, "Rich",
                                     "Middle")))

combinedDataWealthyCountries <- combinedData %>% 
  filter(countryRegion %in% c('United Kingdom', 'France', 'Spain', 
                              'Sweden', 'Italy', 'United States'))
combinedDataPoorCountries <- combinedData %>% filter(countryRegion %in% c('Angola', 'Taiwan', 'Uganda',
                              'Fiji', 'Mozambique', 'Yemen', 
                              'Zimbabwe', 'Thailand', 'Niger'))
combinedDataOutliers <- combinedData %>% filter(casesPerPerson == max(combinedData$casesPerPerson))


#SUM of MOBILITY
# retail and recreation mobility
a1 <- ggplot(data = combinedData, aes(y = log(casesPerPerson), 
                                x = abs(retail_and_recreation_percent_change_from_baseline), 
                                color = wealthLevel)) + 
  geom_point() +
  scale_color_manual(values=c("green", "orange", "blue")) +
  labs(x = 'Mobility Overall Change',
       y = 'Log Cases Per 100,000', 
       title = 'Retail and Recreation') +
  # geom_point(data = combinedDataWealthyCountries,
  #            aes(y = log(casesPerPerson), x = abs(retail_and_recreation_percent_change_from_baseline)),
  #            color='black',
  #            size = 2) +
  # geom_text(data = combinedDataWealthyCountries, aes(label=countryRegion), hjust = -0, vjust =1) +
  # geom_point(data = combinedDataPoorCountries,
  #            aes(y = log(casesPerPerson), x = abs(retail_and_recreation_percent_change_from_baseline)),
  #            color='black',
  #            size = 2) +
  #geom_text(data = combinedDataPoorCountries, aes(label=countryRegion), hjust = -0, vjust =1) +
  theme_bw() + theme_classic() + theme(legend.position = "None")
  
b1<-ggplot(data = combinedData, aes(y = log(casesPerPerson), 
                                x = abs(grocery_and_pharmacy_percent_change_from_baseline), 
                                color = wealthLevel)) + 
  geom_point() +
  scale_color_manual(values=c("green", "orange", "blue")) +
  labs(x = 'Mobility Overall Change',
       y = 'Log Cases Per 100,000', 
       title = 'Grocery and Pharmacy') +
  #geom_point(data = combinedDataWealthyCountries, 
   #          aes(y = log(casesPerPerson), x = abs(grocery_and_pharmacy_percent_change_from_baseline)), 
    #         color='black', 
     #        size = 2) +
  #geom_text(data = combinedDataWealthyCountries, aes(label=countryRegion), hjust = -0, vjust =1) +
  #geom_point(data = combinedDataPoorCountries, 
   #          aes(y = log(casesPerPerson), x = abs(grocery_and_pharmacy_percent_change_from_baseline)), 
    #         color='black', 
     #        size = 2) +
  #geom_text(data = combinedDataPoorCountries, aes(label=countryRegion), hjust = -0, vjust =1) +
  theme_bw() + theme_classic()

c1<-ggplot(data = combinedData, aes(y = log(casesPerPerson), 
                                        x = abs(transit_stations_percent_change_from_baseline), 
                                        color = wealthLevel)) + 
  geom_point() +
  scale_color_manual(values=c("green", "orange", "blue")) +
  labs(x = 'Mobility Overall Change',
       y = 'Log Cases Per 100,000', 
       title = 'Transit Station') +
#  geom_point(data = combinedDataWealthyCountries, 
#             aes(y = log(casesPerPerson), x = abs(transit_stations_percent_change_from_baseline)), 
#             color='black', 
 #            size = 2) +
  #geom_text(data = combinedDataWealthyCountries, aes(label=countryRegion), hjust = -0, vjust =1) +
  #geom_point(data = combinedDataPoorCountries, 
   #          aes(y = log(casesPerPerson), x = abs(transit_stations_percent_change_from_baseline)), 
    #         color='black', 
     #        size = 2) +
#  geom_text(data = combinedDataPoorCountries, aes(label=countryRegion), hjust = -0, vjust =1) +
  theme_bw() + theme_classic()

d1<- ggplot(data = combinedData, aes(y = log(casesPerPerson), 
                                x = abs(parks_percent_change_from_baseline), 
                                color = wealthLevel)) + 
  geom_point() +
  scale_color_manual(values=c("green", "orange", "blue")) +
  labs(x = 'Mobility Overall Change',
       y = 'Log Cases Per 100,000', 
       title = 'Parks') +
#  geom_point(data = combinedDataWealthyCountries, 
 #            aes(y = log(casesPerPerson), x = abs(parks_percent_change_from_baseline)), 
  #           color='black', 
  #           size = 2) +
#  geom_text(data = combinedDataWealthyCountries, aes(label=countryRegion), hjust = -0, vjust =1) +
 # geom_point(data = combinedDataPoorCountries, 
  #           aes(y = log(casesPerPerson), x = abs(parks_percent_change_from_baseline)), 
   #          color='black', 
    #         size = 2) +
#  geom_text(data = combinedDataPoorCountries, aes(label=countryRegion), hjust = -0, vjust =1) +
  theme_bw() + theme_classic()


e1 <- ggplot(data = combinedData, aes(y = log(casesPerPerson), 
                                      x = abs(workplaces_percent_change_from_baseline), 
                                      color = wealthLevel)) + 
  geom_point() +
  scale_color_manual(values=c("green", "orange", "blue")) +
  labs(x = 'Mobility Overall Change',
       y = 'Log Cases Per 100,000', 
       title = 'Workplaces') +
#  geom_point(data = combinedDataWealthyCountries, 
#             aes(y = log(casesPerPerson), x = abs(workplaces_percent_change_from_baseline)), 
 #            color='black', 
  #           size = 2) +
#  geom_text(data = combinedDataWealthyCountries, aes(label=countryRegion), hjust = -0, vjust =1) +
 # geom_point(data = combinedDataPoorCountries, 
  #           aes(y = log(casesPerPerson), x = abs(workplaces_percent_change_from_baseline)), 
   #          color='black', 
    #         size = 2) +
#  geom_text(data = combinedDataPoorCountries, aes(label=countryRegion), hjust = -0, vjust =1) +
  theme_bw() + theme_classic()

f1<- ggplot(data = combinedData, aes(y = log(casesPerPerson), 
                                     x = abs(residential_percent_change_from_baseline), 
                                     color = wealthLevel)) + 
  geom_point() +
  scale_color_manual(values=c("green", "orange", "blue")) +
  labs(x = 'Mobility Overall Change',
       y = 'Log Cases Per 100,000', 
       title = 'Residential') +
#  geom_point(data = combinedDataWealthyCountries,
#             aes(y = log(casesPerPerson), x = abs(residential_percent_change_from_baseline)),
 #            color='black',
  #           size = 2) +
#  geom_text(data = combinedDataWealthyCountries, aes(label=countryRegion), hjust = -0, vjust =1) +
 # geom_point(data = combinedDataPoorCountries,
#             aes(y = log(casesPerPerson), x = abs(residential_percent_change_from_baseline)),
 #            color='black',
  #           size = 2) +
#  geom_text(data = combinedDataPoorCountries, aes(label=countryRegion), hjust = -0, vjust =1) +
  theme_bw() + theme_classic() 

ax50<-ggarrange (a1 + theme(legend.position = "none"),
           b1 + theme(legend.position = "none"),
           c1 +  theme(legend.position = "none"), 
           d1 + theme(legend.position = "none"),
           f1 +  theme(legend.position = "none"),
           e1 +  theme(legend.position = "none"),
           common.legend = TRUE, legend = "right")

annotate_figure(ax50,top=text_grob("Cases per 100,000 v Sum of Mobility Change", color="red", face="bold", size=14))

#maximum mobility change


maxReductionInMobility <- mobility %>%
  group_by(country_region) %>%
  replace(is.na(.), 0)  %>%
  summarise(maxRetail = min(retail_and_recreation_percent_change_from_baseline),
            maxGrocery = min(grocery_and_pharmacy_percent_change_from_baseline),
            maxParks = max(parks_percent_change_from_baseline),
            maxTransit = min(transit_stations_percent_change_from_baseline),
            maxWorkplace = min(workplaces_percent_change_from_baseline),
            maxResidential = max(residential_percent_change_from_baseline))

changeInMobility <- maxReductionInMobility %>% rename(countryRegion = country_region)
combinedData <- inner_join(casesPerPerson, changeInMobility, by="countryRegion", all = TRUE)
combinedData <- inner_join(combinedData, owidData, by = "countryRegion", all = TRUE)
combinedData <- combinedData %>%
  group_by(countryRegion) %>% 
  summarise(across(cc:gdp_per_capita, mean)) %>% 
  select(-date.x, -date.y) %>%
  mutate(wealthLevel = ifelse(gdp_per_capita <= 10000, "Poor", 
                              ifelse(gdp_per_capita >=31000, "Rich",
                                     "Middle")))

combinedDataWealthyCountries <- combinedData %>% 
  filter(countryRegion %in% c('United Kingdom', 'France', 'Spain', 
                              'Sweden', 'Italy', 'United States'))
combinedDataPoorCountries <- combinedData %>% filter(countryRegion %in% c('Angola', 'Taiwan', 'Uganda',
                                                                          'Fiji', 'Mozambique', 'Yemen', 
                                                                          'Zimbabwe', 'Thailand', 'Niger'))
combinedDataOutliers <- combinedData %>% filter(casesPerPerson == max(combinedData$casesPerPerson))



a1 <- ggplot(data = combinedData, aes(y = log(casesPerPerson), 
                                      x = abs(maxRetail), 
                                      color = wealthLevel)) + 
  geom_point(show.legend = FALSE) +
  scale_color_manual(values=c("green", "orange", "blue")) +
  labs(x = 'Mobility Maximum Change',
       y = 'Log Cases Per 100,000', 
       title = 'Retail and Recreation') +
  # geom_point(data = combinedDataWealthyCountries, 
  #            aes(y = log(casesPerPerson), x = abs(maxRetail)), 
  #            color='black', 
  #            size = 2, 
  #            show.legend = FALSE) +
  # geom_text(data = combinedDataWealthyCountries, aes(label=countryRegion), hjust = -0, vjust =1) +
  # geom_point(data = combinedDataPoorCountries, 
  #            aes(y = log(casesPerPerson), x = abs(maxRetail)), 
  #            color='black', 
  #            size = 2, 
  #            show.legend = FALSE) +
  # geom_text(data = combinedDataPoorCountries, aes(label=countryRegion), hjust = -0, vjust =1) +
  theme_bw() + theme_classic() + theme(legend.position = "none")

b1<-ggplot(data = combinedData, aes(y = log(casesPerPerson), 
                                    x = abs(maxGrocery), 
                                    color = wealthLevel)) + 
  geom_point() +
  scale_color_manual(values=c("green", "orange", "blue")) +
  labs(x = 'Mobility Maximum Change',
       y = 'Log Cases Per 100,000', 
       title = 'Grocery and Pharmacy') +
  # geom_point(data = combinedDataWealthyCountries, 
  #            aes(y = log(casesPerPerson), x = abs(maxGrocery)), 
  #            color='black', 
  #            size = 2) +
  # geom_text(data = combinedDataWealthyCountries, aes(label=countryRegion), hjust = -0, vjust =1) +
  # geom_point(data = combinedDataPoorCountries, 
  #            aes(y = log(casesPerPerson), x = abs(maxGrocery)), 
  #            color='black', 
  #            size = 2) +
  # geom_text(data = combinedDataPoorCountries, aes(label=countryRegion), hjust = -0, vjust =1) +
  theme_bw() + theme_classic() + theme(legend.position = "none")

c1<-ggplot(data = combinedData, aes(y = log(casesPerPerson), 
                                    x = abs(maxTransit), 
                                    color = wealthLevel)) + 
  geom_point() +
  scale_color_manual(values=c("green", "orange", "blue")) +
  labs(x = 'Mobility Maximum Change',
       y = 'Log Cases Per 100,000', 
       title = 'Transit Station') +
  # geom_point(data = combinedDataWealthyCountries, 
  #            aes(y = log(casesPerPerson), x = abs(maxTransit)), 
  #            color='black', 
  #            size = 2) +
  # geom_text(data = combinedDataWealthyCountries, aes(label=countryRegion), hjust = -0, vjust =1) +
  # geom_point(data = combinedDataPoorCountries, 
  #            aes(y = log(casesPerPerson), x = abs(maxTransit)), 
  #            color='black', 
  #            size = 2) +
  #geom_text(data = combinedDataPoorCountries, aes(label=countryRegion), hjust = -0, vjust =1) +
  theme_bw() + theme_classic() + theme(legend.position = "none")

d1<- ggplot(data = combinedData, aes(y = log(casesPerPerson), 
                                     x = abs(maxParks), 
                                     color = wealthLevel)) + 
  geom_point() +
  scale_color_manual(values=c("green", "orange", "blue")) +
  labs(x = 'Mobility Maximum Change',
       y = 'Log Cases Per 100,000', 
       title = 'Parks') +
  # geom_point(data = combinedDataWealthyCountries, 
  #            aes(y = log(casesPerPerson), x = abs(maxParks)), 
  #            color='black', 
  #            size = 2) +
  # geom_text(data = combinedDataWealthyCountries, aes(label=countryRegion), hjust = -0, vjust =1) +
  # geom_point(data = combinedDataPoorCountries, 
  #            aes(y = log(casesPerPerson), x = abs(maxParks)), 
  #            color='black', 
  #            size = 2) +
  # geom_text(data = combinedDataPoorCountries, aes(label=countryRegion), hjust = -0, vjust =1) +
  theme_bw() + theme_classic() + theme(legend.position = "none")


e1 <- ggplot(data = combinedData, aes(y = log(casesPerPerson), 
                                      x = abs(maxWorkplace), 
                                      color = wealthLevel)) + 
  geom_point() +
  scale_color_manual(values=c("green", "orange", "blue")) +
  labs(x = 'Mobility Maximum Change',
       y = 'Log Cases Per 100,000', 
       title = 'Workplace') +
  # geom_point(data = combinedDataWealthyCountries, 
  #            aes(y = log(casesPerPerson), x = abs(maxWorkplace)), 
  #            color='black', 
  #            size = 2) +
  # geom_text(data = combinedDataWealthyCountries, aes(label=countryRegion), hjust = -0, vjust =1) +
  # geom_point(data = combinedDataPoorCountries, 
  #            aes(y = log(casesPerPerson), x = abs(maxWorkplace)), 
  #            color='black', 
  #            size = 2) +
  # geom_text(data = combinedDataPoorCountries, aes(label=countryRegion), hjust = -0, vjust =1) +
  theme_bw() + theme_classic() + theme(legend.position = "none")

f1<- ggplot(data = combinedData, aes(y = log(casesPerPerson), 
                                     x = abs(maxResidential), 
                                     color = wealthLevel)) + 
  geom_point() +
  scale_color_manual(values=c("green", "orange", "blue")) +
  labs(x = 'Mobility Maximum Change',
       y = 'Log Cases Per 100,000', 
       title = 'Residential') +
  # geom_point(data = combinedDataWealthyCountries, 
  #            aes(y = log(casesPerPerson), x = abs(maxResidential)), 
  #            color='black', 
  #            size = 2) +
  # geom_text(data = combinedDataWealthyCountries, aes(label=countryRegion), hjust = -0, vjust =1) +
  # geom_point(data = combinedDataPoorCountries, 
  #            aes(y = log(casesPerPerson), x = abs(maxResidential)), 
  #            color='black', 
  #            size = 2) +
  # geom_text(data = combinedDataPoorCountries, aes(label=countryRegion), hjust = -0, vjust =1) +
  theme_bw() + theme_classic() 

g_legend<-function(a.gplot){
  tmp <- ggplot_gtable(ggplot_build(a.gplot))
  leg <- which(sapply(tmp$grobs, function(x) x$name) == "guide-box")
  legend <- tmp$grobs[[leg]]
  return(legend)}

mylegend<-g_legend(f1)

qw1<-ggarrange (a1,b1,c1,d1,f1,e1, common.legend = TRUE, legend = "right")
qw1
annotate_figure(qw1,top=text_grob("Cases per 100,000 v Maximum Mobility Change", color="red", face="bold", size=14))

rm(list = ls())
library(tidyverse)
library(dplyr)
library(reshape2)
library(lubridate)
library(covid19.analytics)
library(plm)
library(ggpubr)
# load the data ...
# covid data from John Hopkins 
covid <- covid19.data(case = "ts-confirmed")


# Mobility data from Google
mobility <- read.csv("data/Global_Mobility_Report.csv")
mobility <- mobility %>% 
  # sub region "" why?
  filter(sub_region_1 == "") %>% 
  mutate(date = ymd(date)) %>% 
  # dates before end of first wave
  filter(date <= "2020-07-01") %>% 
  # select columns
  select(-country_region_code, -sub_region_1, -sub_region_2, -metro_area, -iso_3166_2_code,
         -census_fips_code)

# Data containing number of cases
worldData <- read.csv('data/worlddatan.csv')
worldData <- worldData %>% 
  mutate(countriesAndTerritories = replace(countriesAndTerritories, which(countriesAndTerritories=="United_Kingdom"), "United Kingdom")) %>%
  mutate(countriesAndTerritories = replace(countriesAndTerritories, which(countriesAndTerritories=="United_States_of_America"), "United States")) %>%
  mutate(dateRep = dmy(dateRep))

owid <- read.csv('data/owid-covid-data.csv')

owidData <- owid %>%
  rename(countriesAndTerritories = location) %>%
  select(countriesAndTerritories, date, new_cases, gdp_per_capita) %>%
  group_by(countriesAndTerritories) %>%
  summarise(across(new_cases:gdp_per_capita, mean))

#### Maximum reduction in mobility in different categories
maxReductionInMobility <- mobility %>%
  group_by(country_region) %>%
  replace(is.na(.), 0)  %>%
  summarise(maxRetail = min(retail_and_recreation_percent_change_from_baseline),
            maxGrocery = min(grocery_and_pharmacy_percent_change_from_baseline),
            maxParks = max(parks_percent_change_from_baseline),
            maxTransit = min(transit_stations_percent_change_from_baseline),
            maxWorkplace = min(workplaces_percent_change_from_baseline),
            maxResidential = max(residential_percent_change_from_baseline))


####-------------- 26th March 2020 ----------------------------
newWorldData <- worldData %>% group_by(continentExp, countriesAndTerritories) %>% summarise(maxCases = max(cases)) 
finalWorldData <- worldData %>%  filter(dateRep >= dmy("24/06/2020")) %>% filter(dateRep <= dmy("01/07/2020")) 
finalWorldDataTwo <- finalWorldData %>% group_by(countriesAndTerritories) %>% summarise(endCases = mean(cases)) 
finalWorldData <- inner_join(newWorldData, finalWorldDataTwo, by = "countriesAndTerritories", all =TRUE)
finalWorldData <- finalWorldData %>% 
  group_by(continentExp, countriesAndTerritories) %>%
  mutate(percentChange = (maxCases - endCases)/maxCases * 100)
finalWorldData <- inner_join(finalWorldData, owidData, by = "countriesAndTerritories", all = TRUE)
finalWorldData <- finalWorldData %>% mutate(wealthLevel = ifelse(gdp_per_capita <= 10000, "Poor", 
                                                                 ifelse(gdp_per_capita >=31000, "Rich",
                                                                        "Middle")))

newDataset <- finalWorldData %>% 
  filter(maxCases >= 1) %>%
  mutate(country_region = countriesAndTerritories) 

newDataset <- inner_join(newDataset, maxReductionInMobility, by = "country_region", all = TRUE)
newDataset <- newDataset %>% mutate(absRetail = abs(maxRetail), 
                                    absGrocery = abs(maxGrocery),
                                    absPark = abs(maxParks),
                                    absTransit = abs(maxTransit),
                                    absWorkplace = abs(maxWorkplace),
                                    absResidential = abs(maxResidential))

newDatasetSelectedCountries <- newDataset %>% filter(country_region %in% c('United Kingdom', 'France', 'Spain', 'Sweden', 'United States'))

plotMobility <- function(dataframe, 
                         xCoord, 
                         yCoord, 
                         colorer,
                         xAxisLabel,
                         yAxisLabel, 
                         plotTitle){
  xCoord <- enquo(xCoord)
  yCoord <- enquo(yCoord)
  colorer <- enquo(colorer)
  finalPlot <- ggplot(data = dataframe, aes_(x = xCoord, y = yCoord, color = colorer)) +
    geom_point()+ scale_color_manual(values=c("green", "orange", "blue"))+ scale_y_continuous(trans = 'log10') + labs(x = xAxisLabel,
                                                              y = yAxisLabel,
                                                              title = plotTitle) +
    theme_bw() + theme_classic() + theme(legend.position = "none")
  finalPlot
}


d1<-plotMobility(newDataset, 
             absGrocery, 
             percentChange, 
             colorer = wealthLevel,
             xAxisLabel = "Maximum Grocery", 
             yAxisLabel = "Percentage change from maximum",
             plotTitle = "Grocery")

a1<-plotMobility(newDataset, 
                 absRetail, 
                 percentChange, 
                 colorer = wealthLevel,
                 xAxisLabel = "Maximum Retail Change", 
                 yAxisLabel = "Percentage Change of Daily Cases",
                 plotTitle = "Retail")

b1<- plotMobility(newDataset, 
                  absTransit, 
                  percentChange, 
                  colorer = wealthLevel,
                  xAxisLabel = "Maximum Transit Change", 
                  yAxisLabel = "Percentage change of Daily Cases",
                  plotTitle = "Transit")

c1<-plotMobility(newDataset, 
                 absPark, 
                 percentChange, 
                 colorer = wealthLevel,
                 xAxisLabel = "Maximum Park Change", 
                 yAxisLabel = "Percentage change of Daily Cases",
                 plotTitle = "Parks")

e1<-plotMobility(newDataset, 
                 absWorkplace,
                 percentChange, 
                 colorer = wealthLevel,
                 xAxisLabel = "Maximum Workplace Change", 
                 yAxisLabel = "Percentage change of Daily Cases",
                 plotTitle = "Workplace")

f1<- plotMobility(newDataset, 
                  absGrocery, 
                  percentChange, 
                  colorer = wealthLevel,
                  xAxisLabel = "Maximum Residential Change", 
                  yAxisLabel = "Percentage change of Daily Cases",
                  plotTitle = "Residential")

percMob<-ggarrange(a1,b1,c1,d1,e1,f1, common.legend = TRUE, legend = "right")
annotate_figure(percMob,top=text_grob("Decline of Daily Cases with Maximum Mobility Change", color="red", face="bold", size=14))




